{"version":3,"sources":["components/Employe/index.js","components/Employe/Employe.js","components/ListEmployesBirthday/ListEmployesBirthday.js","components/ListEmployesBirthday/index.js","components/ListEmployes/ListEmployes.js","components/ListEmployes/index.js","types/actionsTypes.js","actions/actions.js","containers/ListEmployesContainer.js","App.js","reducers/reducer.js","reducers/index.js","index.js"],"names":["Employe","employes","employe","changeChecked","onChange","id","htmlFor","firstName","lastName","type","name","defaultChecked","checked","ListEmployesBirthday","arrMonthes","Object","keys","January","Fabruary","March","April","May","June","July","August","September","October","November","December","checkedEmployes","i","length","push","getEmployesInMonth","chekedEmployes","month","list","Date","parse","dob","getMonth","listMonthes","map","ind","names","item","className","document","title","ListEmployes","isLoading","isError","useEffect","localStorage","setItem","JSON","stringify","arrLetters","code","String","fromCodePoint","letter","index","listName","filter","filterEmployes","READ_EMPLOYES_REQUEST","READ_EMPLOYES_FAILURE","READ_EMPLOYES_SUCCESS","CHANGE_EMPLOYE_REQUEST","CHANGE_EMPLOYE_FAILURE","CHANGE_EMPLOYE_SUCCESS","readJsonActionSuccess","data","payload","readJson","dataLocalStorage","dispatch","axios","get","then","response","sort","a","b","catch","error","changeCheckedDispatchAction","copyEmployes","findIndex","changeEmployeActionSuccess","connect","state","infoEmployes","props","App","useDispatch","getItem","initialState","action","rootReducer","combineReducers","composeEnhancers","composeWithDevTools","serialize","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9a38db96.chunk.js","sourcesContent":["import Employe from './Employe'\r\nexport default Employe;","import React from \"react\";\r\n\r\nconst Employe = ({ employes, employe, changeChecked }) => {\r\n  return (\r\n    <p onChange={changeChecked(employes, employe.id)}>\r\n      <label htmlFor={employe.id}>\r\n        {employe.firstName + \"  \" + employe.lastName}\r\n        <input\r\n          type=\"checkbox\"\r\n          id={employe.id}\r\n          name={employe.lastName}\r\n          defaultChecked={employe.checked}\r\n        />\r\n      </label>\r\n    </p>\r\n  );\r\n};\r\nexport default Employe;\r\n","import React from \"react\";\r\nimport \"./ListEmployesBirthday.css\";\r\n\r\nfunction ListEmployesBirthday({ employes = [] }) {\r\n  const objMonthes = {\r\n    January: [],\r\n    Fabruary: [],\r\n    March: [],\r\n    April: [],\r\n    May: [],\r\n    June: [],\r\n    July: [],\r\n    August: [],\r\n    September: [],\r\n    October: [],\r\n    November: [],\r\n    December: [],\r\n  };\r\n  const arrMonthes = Object.keys(objMonthes);\r\n  const checkedEmployes = [];\r\n  for (let i = 0; i < employes.length; i++) {\r\n    if (employes[i].checked) checkedEmployes.push(employes[i]);\r\n  }\r\n\r\n  const getEmployesInMonth = (chekedEmployes, month) => {\r\n    let list = [];\r\n    if (checkedEmployes.length > 0) {\r\n      for (let i = 0; i < chekedEmployes.length; i++) {\r\n        if (new Date(Date.parse(checkedEmployes[i].dob)).getMonth() === month)\r\n          list.push(checkedEmployes[i]);\r\n      }\r\n    }\r\n    return list;\r\n  };\r\n\r\n  const listMonthes = arrMonthes.map((month, ind) => {\r\n    let names;\r\n    if (getEmployesInMonth(checkedEmployes, ind).length > 0) {\r\n      names = getEmployesInMonth(checkedEmployes, ind).map((item) => (\r\n        <li key={item.id + item.name} className=\"employes\">\r\n          {item.firstName + \"  \" + item.lastName}\r\n        </li>\r\n      ));\r\n    } else names = [\"no  employees selected\"];\r\n    return (\r\n      <div key={month} className=\"month_wrapper\">\r\n        <div className=\"month_name\">{month}</div>\r\n        <div>{names}</div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <>{listMonthes}</>;\r\n}\r\nexport default ListEmployesBirthday;\r\n","import ListEmployesBirthday from \"./ListEmployesBirthday\";\r\nexport default ListEmployesBirthday;","import React, { useEffect } from \"react\";\r\nimport \"./listEmployes.css\";\r\nimport Employe from \"../Employe\";\r\nimport ListEmployesBirthday from \"../ListEmployesBirthday\";\r\n\r\ndocument.title = `Employees birthday`;\r\n\r\nconst ListEmployes = ({ employes = [], isLoading, isError, changeChecked }) => {\r\n  useEffect(() => {\r\n    localStorage.setItem(\"employes\", JSON.stringify(employes));\r\n  });\r\n\r\n  const arrLetters = [];\r\n  for (let code = 65; code < 91; code++) {\r\n    arrLetters.push(String.fromCodePoint(code));\r\n  }\r\n  const filterEmployes = (letter, employes) => {\r\n    let results = employes.filter((item) => item.lastName[0] === letter);\r\n    const list = results.map((item) => (\r\n      <li key={item.id}>\r\n        <Employe\r\n          employes={employes}\r\n          employe={item}\r\n          changeChecked={changeChecked}\r\n        />\r\n      </li>\r\n    ));\r\n    return list;\r\n  };\r\n\r\n  if (!employes.length && !isLoading && !isError)\r\n    return <p>Список робітників пустий</p>;\r\n  else\r\n    return (\r\n      <div className=\"list__container\">\r\n        {isLoading ? (\r\n          <p>Loading...</p>\r\n        ) : isError ? (\r\n          <p>Виникла помилка, спробуйте ще.</p>\r\n        ) : (\r\n          <>\r\n            <div className=\"list__left\">\r\n              <div className=\"list__header\">Employees</div>\r\n              {arrLetters.map((letter, index) => {\r\n                const listName = filterEmployes(letter, employes);\r\n                return (\r\n                  <div className=\"letter\" key={letter}>\r\n                    {letter}\r\n                    <ul>{listName}</ul>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"list__right\">\r\n              <div className=\"list__header\">Employees birthday</div>\r\n              <div className=\"list__right__birthday\">\r\n                <ListEmployesBirthday employes={employes} />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n};\r\nexport default ListEmployes;\r\n","import ListEmployes from \"./ListEmployes\";\r\nexport default ListEmployes;\r\n","export const READ_EMPLOYES_REQUEST = \"READ_EMPLOYES_REQUEST\";\r\nexport const READ_EMPLOYES_FAILURE = \"READ_EMPLOYES_FAILURE\";\r\nexport const READ_EMPLOYES_SUCCESS = \"READ_EMPLOYES_SUCCESS\";\r\n\r\nexport const CHANGE_EMPLOYE_REQUEST = \"READ_EMPLOYES_REQUEST\";\r\nexport const CHANGE_EMPLOYE_FAILURE = \"READ_EMPLOYES_FAILURE\";\r\nexport const CHANGE_EMPLOYE_SUCCESS = \"READ_EMPLOYES_SUCCESS\";\r\n","import {\r\n  READ_EMPLOYES_REQUEST,\r\n  READ_EMPLOYES_FAILURE,\r\n  READ_EMPLOYES_SUCCESS,\r\n  CHANGE_EMPLOYE_REQUEST,\r\n  CHANGE_EMPLOYE_FAILURE,\r\n  CHANGE_EMPLOYE_SUCCESS,\r\n} from \"../types/actionsTypes.js\";\r\n\r\nimport axios from \"axios\";\r\n\r\n//read Employes\r\nexport const readJsonActionRequest = () => ({ type: READ_EMPLOYES_REQUEST });\r\nexport const readJsonActionFailure = () => ({ type: READ_EMPLOYES_FAILURE });\r\nexport const readJsonActionSuccess = (data) => ({\r\n  type: READ_EMPLOYES_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const readJson = (dataLocalStorage) => (dispatch) => {\r\n  dispatch(readJsonActionRequest());\r\n\r\n  if (dataLocalStorage.length !== 0) {\r\n    dispatch(readJsonActionSuccess(dataLocalStorage));\r\n  } else\r\n    axios\r\n      .get(`https://yalantis-react-school-api.yalantis.com/api/task0/users`)\r\n      .then((response) =>\r\n        dispatch(\r\n          readJsonActionSuccess(\r\n            response.data\r\n              .sort((a, b) => {\r\n                if (a.lastName > b.lastName) return 1;\r\n                if (a.lastName < b.lastName) return -1;\r\n                else return 0;\r\n              })\r\n              .map((item) => {\r\n                item.checked = false;\r\n                return item;\r\n              })\r\n          )\r\n        )\r\n      )\r\n      .catch((error) => dispatch(readJsonActionFailure()));\r\n};\r\n\r\n//change Employe\r\nexport const changeEmployeActionRequest = () => ({\r\n  type: CHANGE_EMPLOYE_REQUEST,\r\n});\r\nexport const changeEmployeActionFailure = () => ({\r\n  type: CHANGE_EMPLOYE_FAILURE,\r\n});\r\nexport const changeEmployeActionSuccess = (employes) => ({\r\n  type: CHANGE_EMPLOYE_SUCCESS,\r\n  payload: employes,\r\n});\r\n\r\nexport const changeCheckedDispatchAction = (employes, id) => (dispatch) => {\r\n  try {\r\n    dispatch(changeEmployeActionRequest());\r\n    let [...copyEmployes] = employes;\r\n    //console.log('is array=' + Array.isArray(copyEmployes));\r\n    let index = copyEmployes.findIndex((item) => item.id === id);\r\n    copyEmployes[index].checked = !copyEmployes[index].checked;\r\n    dispatch(changeEmployeActionSuccess(copyEmployes));\r\n  } catch {\r\n    dispatch(changeEmployeActionFailure());\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ListEmployes from \"../components/ListEmployes\";\r\nimport { changeCheckedDispatchAction } from '../actions/actions.js';\r\n\r\n\r\nconst ListEmployesContainer = (props) => {\r\n  return <ListEmployes {...props} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    employes: state.infoEmployes.employes,\r\n    isLoading: state.infoEmployes.isLoading,\r\n    isError: state.infoEmployes.isError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      changeChecked: (employes, id) => () => {\r\n        dispatch(changeCheckedDispatchAction(employes, id))\r\n      }      \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps , mapDispatchToProps)(\r\n  ListEmployesContainer\r\n);\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport \"./App.css\";\n\nimport ListEmployesContainer from \"./containers/ListEmployesContainer\";\nimport { readJson } from \"./actions/actions.js\";\n\nconst App = (props) => {\n  const dispatch = useDispatch();\n  let dataLocalStorage = JSON.parse(localStorage.getItem(\"employes\"));\n  useEffect(() => dispatch(readJson(dataLocalStorage)));\n  return (\n    <div className=\"App\">\n      <ListEmployesContainer />\n    </div>\n  );\n};\n\nexport default App;\n","import {\r\n  READ_EMPLOYES_REQUEST,\r\n  READ_EMPLOYES_FAILURE,\r\n  READ_EMPLOYES_SUCCESS,\r\n  CHANGE_EMPLOYE_REQUEST,\r\n  CHANGE_EMPLOYE_FAILURE,\r\n  CHANGE_EMPLOYE_SUCCESS,\r\n} from \"../types/actionsTypes.js\";\r\n\r\nconst initialState = {\r\n  employes: [],\r\n  isLoading: false,\r\n  isError: false,\r\n};\r\n\r\nconst infoEmployes = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case READ_EMPLOYES_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    case READ_EMPLOYES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        employes: action.payload,\r\n        isLoading: false,\r\n        isError: false,\r\n      };\r\n    case READ_EMPLOYES_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n\r\n    case CHANGE_EMPLOYE_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    case CHANGE_EMPLOYE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        employes: action.payload,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    case CHANGE_EMPLOYE_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default infoEmployes;\r\n","import { combineReducers } from 'redux';\r\nimport infoEmployes from './reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    infoEmployes\r\n});\r\nexport default rootReducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers/index\";\n\nconst composeEnhancers = composeWithDevTools({ serialize: true });\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}