{"version":3,"sources":["components/Employe/index.js","components/Employe/Employe.js","components/ListEmployes/index.js","components/ListEmployes/ListEmployes.js","types/actionsTypes.js","actions/actions.js","containers/ListEmployesContainer.js","App.js","reducers/reducer.js","reducers/index.js","index.js"],"names":["Employe","employes","employe","changeChecked","onChange","id","htmlFor","firstName","lastName","type","name","ListEmployes","isLoading","isError","arrLetters","code","push","String","fromCodePoint","length","className","map","letter","index","listName","filter","item","filterEmployes","READ_EMPLOYES_REQUEST","READ_EMPLOYES_FAILURE","READ_EMPLOYES_SUCCESS","CHANGE_EMPLOYE_REQUEST","CHANGE_EMPLOYE_FAILURE","CHANGE_EMPLOYE_SUCCESS","readJson","dispatch","axios","get","then","response","data","sort","a","b","checked","payload","catch","error","changeCheckedDispatchAction","copyEmployes","findIndex","changeEmployeActionSuccess","connect","state","infoEmployes","props","App","useDispatch","useEffect","initialState","action","rootReducer","combineReducers","composeEnhancers","composeWithDevTools","serialize","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53240734.chunk.js","sourcesContent":["import Employe from './Employe'\r\nexport default Employe;","import React from \"react\";\r\n\r\nconst Employe = ({employes,  employe, changeChecked }) => {\r\n  return (\r\n    <p onChange = {changeChecked(employes, employe.id)}> \r\n      <label htmlFor={employe.id}>{employe.firstName +'  ' + employe.lastName }\r\n        <input type=\"checkbox\" id={employe.id} name={employe.lastName} />\r\n      </label>        \r\n    </p>   \r\n  );\r\n};\r\nexport default Employe;\r\n","import ListEmployes from \"./ListEmployes\";\r\nexport default ListEmployes;\r\n","import React from \"react\";\r\nimport \"./listEmployes.css\";\r\nimport Employe from \"../Employe\";\r\n\r\nconst ListEmployes = ({ employes = [], isLoading, isError, changeChecked }) => {\r\n  const arrLetters = [];\r\n  for (let code = 65; code < 91; code++) {\r\n    arrLetters.push(String.fromCodePoint(code));\r\n  }\r\n  const filterEmployes = (letter, employes) => {\r\n    let results = employes.filter((item) => item.lastName[0] === letter);\r\n    const list = results.map((item) => (\r\n      <li key={item.id}>\r\n        <Employe employes={employes} employe={item} changeChecked = {changeChecked} />\r\n      </li>\r\n    ));\r\n    return list;\r\n  };\r\n\r\n  if (!employes.length && !isLoading && !isError)\r\n    return <p>Список робітників пустий</p>;\r\n  else\r\n    return (\r\n      <div className=\"list__container\">\r\n        {isLoading ? (\r\n          <p>Loading...</p>\r\n        ) : isError ? (\r\n          <p>Виникла помилка, спробуйте ще.</p>\r\n        ) : (\r\n          <>\r\n\r\n            <div className=\"list__left\">\r\n              <div className=\"list__header\">Employees</div>\r\n              {arrLetters.map((letter, index) => {\r\n                const listName = filterEmployes(letter, employes);\r\n                return (\r\n                  <div className={letter + \" letter\"} key={letter}>\r\n                    {letter}\r\n                    <ul >{listName}</ul>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"list__right\">\r\n              <div className=\"list__header\">Employees birthday</div>\r\n            </div>\r\n          </>\r\n          \r\n        )}\r\n      </div>\r\n    );\r\n};\r\nexport default ListEmployes;\r\n","export const READ_EMPLOYES_REQUEST = \"READ_EMPLOYES_REQUEST\";\r\nexport const READ_EMPLOYES_FAILURE = \"READ_EMPLOYES_FAILURE\";\r\nexport const READ_EMPLOYES_SUCCESS = \"READ_EMPLOYES_SUCCESS\";\r\n\r\nexport const CHANGE_EMPLOYE_REQUEST = \"READ_EMPLOYES_REQUEST\";\r\nexport const CHANGE_EMPLOYE_FAILURE = \"READ_EMPLOYES_FAILURE\";\r\nexport const CHANGE_EMPLOYE_SUCCESS = \"READ_EMPLOYES_SUCCESS\";\r\n","import {\r\n  READ_EMPLOYES_REQUEST,\r\n  READ_EMPLOYES_FAILURE,\r\n  READ_EMPLOYES_SUCCESS,\r\n  CHANGE_EMPLOYE_REQUEST,\r\n  CHANGE_EMPLOYE_FAILURE,\r\n  CHANGE_EMPLOYE_SUCCESS,\r\n} from \"../types/actionsTypes.js\";\r\n\r\nimport axios from \"axios\";\r\n\r\n//read Employes\r\nexport const readJsonActionRequest = () => ({ type: READ_EMPLOYES_REQUEST });\r\nexport const readJsonActionFailure = () => ({ type: READ_EMPLOYES_FAILURE });\r\nexport const readJsonActionSuccess = (data) => ({\r\n  type: READ_EMPLOYES_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const readJson = () => (dispatch) => {\r\n  dispatch(readJsonActionRequest());\r\n  axios\r\n    .get(`https://yalantis-react-school-api.yalantis.com/api/task0/users`)\r\n    .then((response) =>\r\n      dispatch(\r\n        readJsonActionSuccess(\r\n          response.data\r\n            .sort((a, b) => {\r\n              if (a.lastName > b.lastName) return 1;\r\n              if (a.lastName < b.lastName) return -1;\r\n              else return 0;\r\n            })\r\n            .map((item) => {\r\n              item.checked = false;\r\n              return item;\r\n            })\r\n        )\r\n      )\r\n    )\r\n    .catch((error) => dispatch(readJsonActionFailure()));\r\n};\r\n\r\n//change Employe\r\nexport const changeEmployeActionRequest = () => ({ type: CHANGE_EMPLOYE_REQUEST });\r\nexport const changeEmployeActionFailure = () => ({ type: CHANGE_EMPLOYE_FAILURE });\r\nexport const changeEmployeActionSuccess = (employes) => ({\r\n  type: CHANGE_EMPLOYE_SUCCESS,\r\n  payload: employes,\r\n});\r\n\r\nexport const changeCheckedDispatchAction = (employes, id) => (dispatch) => {\r\n  try {\r\n    dispatch(changeEmployeActionRequest());\r\n    let [ ...copyEmployes ]= employes;\r\n    //console.log('is array=' + Array.isArray(copyEmployes));\r\n    let index = copyEmployes.findIndex((item) => item.id === id );\r\n    copyEmployes[index].checked = ! copyEmployes[index].checked;\r\n    dispatch(changeEmployeActionSuccess(copyEmployes));\r\n } catch {\r\n    dispatch(changeEmployeActionFailure());\r\n }\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ListEmployes from \"../components/ListEmployes\";\r\nimport { changeCheckedDispatchAction } from '../actions/actions.js';\r\n\r\n\r\nconst ListEmployesContainer = (props) => {\r\n  return <ListEmployes {...props} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    employes: state.infoEmployes.employes,\r\n    isLoading: state.infoEmployes.isLoading,\r\n    isError: state.infoEmployes.isError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      changeChecked: (employes, id) => () => {\r\n        dispatch(changeCheckedDispatchAction(employes, id))\r\n      }      \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps , mapDispatchToProps)(\r\n  ListEmployesContainer\r\n);\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport \"./App.css\";\n\nimport ListEmployesContainer from \"./containers/ListEmployesContainer\";\nimport { readJson } from \"./actions/actions.js\";\n\nconst App = (props) => {\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(readJson()));\n  return (\n    <div className=\"App\">\n      <ListEmployesContainer />\n    </div>\n  );\n};\n\nexport default App;\n","import {\r\n  READ_EMPLOYES_REQUEST,\r\n  READ_EMPLOYES_FAILURE,\r\n  READ_EMPLOYES_SUCCESS,\r\n  CHANGE_EMPLOYE_REQUEST,\r\n  CHANGE_EMPLOYE_FAILURE,\r\n  CHANGE_EMPLOYE_SUCCESS,\r\n} from \"../types/actionsTypes.js\";\r\n\r\nconst initialState = {\r\n  employes: [],\r\n  isLoading: false,\r\n  isError: false,\r\n};\r\n\r\nconst infoEmployes = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case READ_EMPLOYES_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    case READ_EMPLOYES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        employes: action.payload,\r\n        isLoading: false,\r\n        isError: false,\r\n      };\r\n    case READ_EMPLOYES_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n\r\n    case CHANGE_EMPLOYE_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    case CHANGE_EMPLOYE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        employes: action.payload,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    case CHANGE_EMPLOYE_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default infoEmployes;\r\n","import { combineReducers } from 'redux';\r\nimport infoEmployes from './reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    infoEmployes\r\n});\r\nexport default rootReducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers/index\";\n\nconst composeEnhancers = composeWithDevTools({ serialize: true });\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}